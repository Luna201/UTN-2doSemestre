GUIA CLASE 1:  

-Clase1 - Listas
# LISTAS O ARREGLOS O VECTORES
# ir desde el inicio de la lista al indice deseado (no lo incluye)
# Desde el inicio hasta el final
# Modificamos un valor
# Iterar una lista
# Preguntamos cuantos elementos tiene una lista
# Agregamos un elemento
# Insertar un elemento en un indice especifico
# Eliminamos un elemento
# Eliminamos el ultimo elemento
# Se elimina un indice especifico
# Eliminar, borrar o limpiar todos los elementos
# Eliminar la lista

- Tuplas
# Definimos una Tupla, similar a una LISTA, pero es inmutable
# Len se usa para numerar las tuplas
# Acceder a un elemento, para esto se usa corchetes, NO parentesis
# mostrar de manera inversa
# Acceder a un rango
# recorremos los elementos de la tupla
# Para cambiar la tupla se la debe convertir en Lista, cambiarla y convertirla nuevamente a tupla
# eliminar tupla

- Ejercicio Tuplas
# DADA LA SIGUIENTE TUPLA
tupla = (13, 1, 8, 3, 2, 5, 8)  #Definimos la tupla
Crear una lista que solo incluya los números menores a 5 e imprima por consola [1, 3, 2]

- Ejercicios 1, 2 y 3
# EJERCICIO 1: Iterar un rango de 0 a 10 e imprimir nùmeros divisibles entre 3
# EJERCICIO 2: Crear un rango d nros de 2 a 6 e imprimirlos
# EJERCICIO 3: crear un rango de 3 a 10, con decremento de 2 en 2



GUIA CLASE 2:

Tipo Set: no tiene orden ni se puede modificar, PERO, se puede agregar o eliminar es semi-inmutable. El orden es aleatorio
#Len muestra la cantidad
# Revisar si un elemento existe dentro de set
# Agregar un elemento
# Eliminar elementos, puede arrojar error si el elemento no exite
# Limpiar Set
# Eliminar Set o conjunto
# DICCIONARIO
# Verifica la cantidad de elementos
# Acceder a un diccionario con la llaver=key
# otra manera de recuperar un elemento
# Modificamos elementos
# Como recorrer los elementos
# Necesitamos una funcion para recorrer el diccionario
# Otras maneras de acceder a un diccionario
# usamos una funcion para acceder a un valor
# Comprobar la existencia de algun elemento
# Agregar un elemento
# Eliminar un elemento
# Vaciar un diccionario
# Eliminar diccionario
# concatenamos listas
# Una funcion para agregar varios elementos a la lista
# Funcion para ubicar en que indice esta el valor ingresado
# Como saber cuantos valores repetidos hay dentro de una lista
# Para poner la lista al reves
# Para que una lista se multiplique
# Metodo de ordenamiento
# REPASO DE TUPLAS



GUIA CLASE 3:

-COLECCION CLASE 3
# Tipo Set
# DICCIONARIO
# REPASO DE TUPLAS
# Repaso de set o conjunto para definir un conjunto
# Como hacer la igualdad de 2 conjuntos
# Operaciones en conjuntos
# Como saber si ambos conjuntnos son disconexos, esto es si no comparten elementos en comun
# convertir un conjunto totalmente en inmutable
# Repaso de diccionarios
# los diccionarios pueden almacenar diferentes tipos de datos
# Pilas usando listas
# Agregar elementos a la pila por el final
# Sacamos elementos desde el final
# Colas con listas. Estructuras de datos de tipo fifo(first input/first output
# Agregamos elementos al final de la cola
# Sacamos elementos de la cola


-Ejercicio diccionario: ejercicio con la selección Argentina





GUIA CLASE 4:

-Ejercicio1: Eliminar duplicados de una lista. Escribir un programa donde tenga una lista y que a continuacion elimine
los elementos repetidos, por ultimo mostrar la lista.

-Ejercicio 1 de matemática. Sacar la raiz cuadrada de un número positivo

-Ejercicio 2: Operaciones de conjuntos con listas.
Escribir un programa que tenga 2 listas y que a continuación cree las siguientes listas
(en las que no debe haber repetición)
1- Lista de palabras que aparecen en las listas
2- Lista de palabras que aparecen en la 1ra lista, pero no en la 2da
3- Lista de palabras que aparecen en la 2da lista, pero no en la primera
4- Lista de palabras que aparecen en ambas listas

-Ejercicio 3: Agregar personajes a una lista
Escriba un programa donde cree una lista con los siguientes personajes del Señor de los Anillos.

-Ej 1-Llenar lista: Llenar una lista con los números del 1 al 50, luego mostrar la lista con el ciclo for
los elementos deben mostrarse de la siguiente forma:
1-2-3-4-5-...-50

-Ej 2: Modificar los elementos de una lista.
Llenar una lista con los nros del 1 al 10, luego modificar los elementos de la lista,
 multiplicandolos por un valor ingresado por el usuario

-ej 3-Insert elementos: Insertar elementos y ordenarlos.
Pedir números y meterlos en una lista, cuando el usuario introduzca un nro 0,
nuestro programa dejaría de insertar. Por último, mostrar los nros ordenados crecientemente


CLASE 5:

-Ejercicio 04: Sumar números pares dentro de un rango
Hacer un programa para sumar nros pares dentro de un rango, por ejemplo:
_ suma de nros pares del 2 al 30
_ suma=240

- Ejercicio 5: Factorial de un nro positivo
Hacer un programa para calcular el factorial de un nro positivo

-Ejercicio 6: Tabla de multiplicar
Hacer un programa que pida un nro por teclado y guarde en una lista su tabla de multiplicar hasta el 10. Por ejemplo:
Si digita el 5 la lista tendrá: 5,10,15,20,25,30,35,40,45,50

-Ejercicio 7: Juego adivina el nro
Realizar un juego para adivinar un nro. Para ello se debe generar un nro aleatorio entre 1-100, y luego ir pidiendo
nros indicando "es mayor" o "es menor" según sea mayor o menor respecto a N. El proceso termina cuando el usuario
acierta y allí se debe mostrar el nro de intentos

-Ejercicio 8: Menú interactivo - Cajero automatico
Hacer un programa qu esimule un cajero autoamtico con un saldo inicial de $1000 y tendra las opciones:
1. Ingresar dinero en la cuenta
2. Retirar dinero de la cuenta
3. Mostrar dinero disponible
4. Salir

-Ejercicio 9: Mostrar frases sin espacios y contar su longitud.
Hacer un programa donde el usuario ingrese una frase, se le devolvera la misma frase pero sin espacios en blanco,
y además un contador de cúantos caracteres tien la frase (sin contar los espacios en blanco)
Ejemplo:    frase = vivir por siempre en paz
            frase final = vivirporsiempreenpaz
            Nº de caracteres = 21

-FuncionesDePython: definición de función




CLASE 6 (ESTAN EN LA CLASE 5):

-Ejercicio 10: No rEpetir caracteres
Hacer un programa que pida una cadena por teclado, luego
meter los caracteres en la lista sin repetir caracteres.

- Ejercicio 11: Agenda telefonica
Hacer un programa que simule una agenda de telefono. Crear un diccionario
donde la clave sea el nombre del ususario y el valor sea el telefono,
el programa tendra el siguiente menu de opciones:
1. Nuevo contacto
2. Borrar contacto
3. Ver contactos existentes
4. Salir

# DEsempaquetado de listas o list Unpacking

# Repaso del Ciclo for else

# List comprehesion, lista de compresion. NO modifica la lista, SOLO extrae

# Paso de Argumentos (funciones)

# La palabra Return en funciones

# Valores por Defaul

# Argumentos variables en funciones #Es la forma cuando no se conoce el nro de argumentos: *args

- Ejercicio 01: Crear una función para sumar los valores recibidos de tipo numéricos,
utilizando argumentos variables *args como parametro de la Función y agregar como
resultado de la suma de todos los valores pasados como argumentos
definimos la función



CLASE 7 (ESTAN EN LA CLASE 5)

- Ejercicio 02: Función con *args para multiplicar.
Crear una función para multiplicar los valores recibidos de tipo numéricos, utilizando
argumentos variables *args como parámetro de la función y regresar como resultado la
multiplicación de todos los valores pasados com argumentos

# Argumentos variables con diccionarios

# Lista de elementos con funciones (convertir)

# Funciones de recursividad: una función recursiva que se llama a si misma para cumplir con una tarea
 Necesita un caso base y uno recursivo

#TAREA, QUE EL USUARIO INGRESE EL NRO FACTORIAL

- Ejercicio 03: Función recursiva
Imprimir números de 5 a 1 de manera descendente usando funciones recursivas. Puede ser cualquier
valor positivo, por ejemplo, si pasamos el nro 5, debe imprimir:
5
4
3
2
1
si se ingresan nros negativos no se imprime nada"""

- Ejercicio 4: Calculadora de impuestos
Crear una función para calcular el total de un pago incluyendo un impuesto aplicado (IVA)

- Ejercicio 5: Convertidor de temperaturas
Realizar dos funciones para convertir de grados celcius a fahrenheit y viceversa.
